# disable or enable service, cat, install, uninstall

# signal host service cat name [name [name [...]]]
# signal host service disable name [name [name [...]]]
# signal host service enable name [name [name [...]]]
# signal host service state name [name [name [...]]]
# signal host service uninstall name [name [name [...]]]
# signal host service install name [name [name [...]]]
# signal host service stamp name [name [name [...]]]

# consider to add:
# signal host service              # replacement for signal host services
# signal host service info name    # replacement for signal host services name 


# @TODO update service broker


service_enable()  {
   [[ -f $f ]] || fatal "can't $cmd $service"
   chmod +x $f 
}

service_disable()  {
   [[ -f $f ]] || fatal "can't $cmd $service"
      chmod -x $f 
}

service_state()  {
   [[ -f $f ]] || fatal "can't $cmd $service"
   [[ -x $f ]] && echo "on $service" || echo "off $service"
}

service_stamp()  {
   [[ -f $f ]] || fatal "can't $cmd $service"
   echo "$(stat -c%Y $f) $service"
}

service_cat()  {
   [[ -f $f ]] || fatal "can't $cmd $service"
   cat $f
}

service_uninstall()  {
   [[ -f $f ]] || fatal "can't $cmd $service"
   rm -f $f
}

service_install()  {
# install new service from pool
   if [[ -f $f ]]; then
      error "service $service already installed"
   else
      [[ -z $pool ]] && source $fragments/pool
      signal $pool pool |
      grep "^$service " |
      while read service stamp description; do
         signal $pool pool cat $service > $f
         touch -d @$stamp $f
      done
   fi
}


#service_()  {
#   services="$p/*"
#   for f in $services; do
#      [[ -f $f ]] && {
#         [[ -x $f ]] &&
#            state="an" ||
#            state="aus"
#         read description < $f
#         description="${description#*#}"
#         stamp="$(stat -c%Y $f)"
#         printf '%-3s %d %-14s %-10s %s\n' "$state" "$stamp" "${f##*/service_}" "$HOSTNAME" "${description## }"
#      }
#   done |
#   sort -n
#}


cmd=$1
shift
if type -t service_$cmd > /dev/null; then
   for service in $@; do
      f="$p/service_$service"
      service_$cmd $service
   done
else
   fatal "can't $cmd $service"
fi
