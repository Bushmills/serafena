pool="$(signal :pool hostname)"

installer_run()  {
cat << EOF
signal()  {
   nc $pool $port <<< "\$HOSTNAME signal \$@"
}

services=$(signal :pool x 'echo $p' | awk '{print $3}')

echo "$pool has its services installed into directory \$services."
echo "we'll use the same directory for this installation."

config="/etc/xinetd.d/signal"
dir="\$services"
server="\$dir/dispatch"
mkdir -p \$dir

echo "1. installing serafena server \$server"
signal :pool cat \$server > \$server
chmod +x \$server

echo "2. installing serafena fragments to \$dir/fragments/"
mkdir -p \$dir/fragments
signal :pool ls \$dir/pool/fragments |
while read f; do
   signal :pool cat \$dir/pool/fragments/\$f > \$dir/fragments/\$f
done

# services with facettes must be reinstalled again later: facettes won't show now.
echo "3. installing essential service handlers to \$dir/ "
for service in signal service group update welcome; do
   signal :pool service cat \$service > \$dir/service_\$service
   chmod +x \$dir/service_\$service
done

echo "4. Generating xinetd component configuration file \$config"
signal :pool cat \$config > \$config

echo "5. Restarting xinetd"
/etc/init.d/xinetd restart

echo "6. Collecting invocation script"
echo "TODO - unfinished"

echo "installation complete."
EOF
}

cmd=$1
shift
[[ "$cmd" == "show" ]] && cmd=run			# is the same, because instructions redirect output to a tmp file, which is then sourced 
type -t installer_$cmd > /dev/null & installer_$cmd
