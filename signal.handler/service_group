# named groups of hosts
# @HELP signal host group				# show all groups
# @HELP signal host group name				# show members of group name
# @HELP signal host group name =			# delete group
# @HELP signal host group name = host1 host2 host3 ...	# assign host1 host2 host3 to group name
# @HELP signal host group name += host1 host2 host3 ...	# add host1 host2 host3 to group name
# @HELP signal host group name -= host1 host2 host3	# remove host from group. single host only
# @HELP signal host group name member host		# is host member of group?
# @HELP signal host group name dead			# diagnostic on group members: report members which aren't responding to pings

# @TODO prevent multiple additions of same host to a group

# keep groups harmonic over hosts, while storing them on each host:
# update -> publish

# @TODO change subcommand dispatch away from that nested conditionals structure


# each group one subdir
# each member a stub file
buildgroups()  {
   cd $base &&
   for d in *; do   
      rmdir --ignore-fail-on-non-empty $d
      [[ -d $d ]] && {
         members=($d/*)					# read list of group member
         [[ -f $members ]] &&
         echo "${d#*/}=\"${members[@]#$d/}\""		# output in form of  group="host1 host2 host3"
      }
   done > $groups
}

group="${1//[!a-z0-9-.]/_}"				# rigorously substitute illegal chars against underscores
cmd="${2//[!a-z+-=]/_}"
shift 2
args="${@//[!a-z0-9-.]/_}"
base=$groups.base
d="$base/$group"
mkdir -p $d &&
cd $d &&
if [[ -z "$group" ]]; then
   [[ -f $groups ]] || buildgroups
   cat $groups
elif [[ -z $cmd ]]; then				# signal host group foo
   members=(*)						# read list of group member
   [[ -f $members ]] && echo *
elif [[ $cmd == "=" ]]; then				# signal host group foo =
   rm -f *
   [[ ! -z $args ]] && touch $args
   buildgroups
elif [[ $cmd == "+=" ]]; then				# signal host group foo +=
   [[ ! -z $args ]] && {				# signal host group foo += host(s)
      touch $args
      buildgroups
   }
elif [[ $cmd == "-=" ]]; then				# signal host group foo -= host
   [[ ! -z $args ]] &&  {
      rm -f $args
      buildgroups
   }
elif [[ $cmd == "member" ]]; then			# signal host group name member name
   shift
   [[ ! -f $args ]]
   echo $?
elif [[ $cmd == dead ]]; then
   fping -u -r1 * 2>&1 | sed 's/ .*//'
else
   fatal "service group received wrong arguments"
fi
true
